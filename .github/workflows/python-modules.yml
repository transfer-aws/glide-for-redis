# The cross platform build was created based on the [Packaging Rust Applications for the NPM Registry blog](https://blog.orhun.dev/packaging-rust-for-npm/).

name: Python Modules Tests

on:
    pull_request:
      paths:
        - .github/workflows/python-modules.yml
        - .github/workflows/build-python-wrapper/action.yml
        - .github/workflows/start-self-hosted-runner/action.yml
        - .github/workflows/install-shared-dependencies/action.yml
        - .github/workflows/install-valkey/action.yml
        - .github/json_matrices/build-matrix.json
    push:
        branches: ["main"]
        paths:
            - python/**
concurrency:
    group: python-modules-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

permissions:
      id-token: write

jobs:
    load-engine-matrix:
        runs-on: ubuntu-latest
        outputs:
          matrix: ${{ steps.load-engine-matrix.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
        
            - name: Load the engine matrix
              id: load-engine-matrix
              shell: bash
              run: echo "matrix=$(jq -c . < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT
                

    start-self-hosted-runner:
        if: github.repository_owner == 'valkey-io'
        runs-on: ubuntu-latest
        environment: AWS_ACTIONS
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Start self hosted EC2 runner
            uses: ./.github/workflows/start-self-hosted-runner
            with:
                role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
                aws-region: ${{ secrets.AWS_REGION }}
                ec2-instance-id: ${{ secrets.AWS_EC2_INSTANCE_ID }}

    python-modules-test:
        needs: [start-self-hosted-runner, load-engine-matrix]
        if: github.repository_owner == 'valkey-io'
        name: Running Module Tests
        runs-on: ${{ matrix.host.RUNNER }}
        timeout-minutes: 35
        strategy:
            fail-fast: false
            matrix:
                engine: ${{ fromJson(needs.load-engine-matrix.outputs.matrix) }}
                python:
                  # - "3.8"
                  # - "3.9"
                  # - "3.10"
                  # - "3.11"
                    - "3.12"
                host:
                    - {
                        OS: "ubuntu",
                        NAMED_OS: "linux",
                        RUNNER: ["self-hosted", "Linux", "ARM64"],
                        ARCH: "arm64",
                        TARGET: "aarch64-unknown-linux-gnu",
                        PACKAGE_MANAGERS: ["pypi", "npm"],
                        CONTAINER: "2_28"
                     }
        
        steps:
            - name: Setup self-hosted runner access
              if: ${{ contains(matrix.host.RUNNER, 'self-hosted') }}
              run: sudo chown -R $USER:$USER /home/ubuntu/actions-runner/_work/valkey-glide

            
            - uses: actions/checkout@v4
              with:
                submodules: recursive
            
            - name: Setup Python for self-hosted Ubuntu runners
              if: contains(matrix.host.OS, 'ubuntu') && contains(matrix.host.RUNNER, 'self-hosted')
              run: |
                    sudo apt update -y
                    sudo apt upgrade -y
                    sudo apt install python3 python3-venv python3-pip -y
    
            #- name: Set up Python
            #  uses: actions/setup-python@v4
            #  with:
            #    python-version: ${{ matrix.python }}
    
            - name: Install dependencies
              working-directory: ./python
              run: |
                      python3 -m pip install --upgrade pip
                      pip install mypy-protobuf
    
            - name: Build Python wrapper
              uses: ./.github/workflows/build-python-wrapper
              with:
                      os: ${{ matrix.host.OS }}
                      target: ${{ matrix.host.TARGET }}
                      github-token: ${{ secrets.GITHUB_TOKEN }}
                      engine-version: ${{ matrix.engine.version }}


            #- name: Build Python wrapper
            #  uses: ./.github/workflows/build-python-wrapper
            #  with:
            #      os: ${{ matrix.host.OS }}
            #      target: ${{ matrix.host.TARGET }}
            #      publish: "true"
            #      github-token: ${{ secrets.GITHUB_TOKEN }}
            #      engine-version: "7.2.5"

            - name: Type check with mypy
              working-directory: ./python
              run: |
                      # The type check should run inside the virtual env to get
                      # all installed dependencies and build files
                      source .env/bin/activate
                      pip install mypy types-protobuf
                      # Install the benchmark requirements
                      pip install -r ../benchmarks/python/requirements.txt
                      python3 -m mypy ..
    
            - name: Test with pytest
              working-directory: ./python
              run: |
                      source .env/bin/activate
                      cd python/tests/
                      pytest --asyncio-mode=auto --html=pytest_report.html --self-contained-html

    